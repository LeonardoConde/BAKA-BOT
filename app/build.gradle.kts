/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.2/userguide/building_java_projects.html
 */

//VM Options for terminal
val ENVIRONMENT: String by project
val DB_NAME    : String by project
val DB_URL     : String by project
val DB_PORT    : String by project
val DB_USERNAME: String by project
val DB_PASSWORD: String by project
val BOT_TOKEN  : String by project


plugins {
    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id("org.jetbrains.kotlin.jvm") version "1.5.0"

    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven("https://m2.dv8tion.net/releases")
}

dependencies {

    //Main application
    // Align versions of all Kotlin components
    implementation(platform("org.jetbrains.kotlin:kotlin-bom"))

    // Use the Kotlin JDK 8 standard library.
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:30.1.1-jre")

    //This dependency is used by the JDA
    implementation("net.dv8tion:JDA:4.3.0_331")

    //This dependency is user by the Logback-classic
    implementation("ch.qos.logback:logback-classic:1.2.3")

    //This dependency is user by the Dot-net
    implementation("io.github.cdimascio:java-dotenv:5.1.1")

    implementation("org.json:json:20210307")

    //Tests
    // Use the Kotlin test library.
    testImplementation("org.jetbrains.kotlin:kotlin-test")

    // Use the Kotlin JUnit integration.
    testImplementation("org.jetbrains.kotlin:kotlin-test-junit")




}

application {
    // Define the main class for the application.
    mainClass.set("bakaBotSrc.AppKt")
}

tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile>{
    kotlinOptions.jvmTarget = "1.8"
}

tasks.withType<JavaCompile>{
    options.encoding="UTF-8"
}

tasks.register<JavaExec>("runWithVMOptions"){
    //to run on cmd:
    //gradle -q -Dorg.gradle.project.ENVIRONMENT=<Your_Var> -Dorg.gradle.project.DB_NAME=<Your_Var> -Dorg.gradle.project.DB_URL=<Your_Var> -Dorg.gradle.project.DB_PORT=<Your_Var> -Dorg.gradle.project.DB_USERNAME=<Your_Var> -Dorg.gradle.project.DB_PASSWORD=<Your_Var> -Dorg.gradle.project.BOT_TOKEN=<Your_Var> run
    doFirst {
        System.setProperty("ENVIRONMENT",ENVIRONMENT)
        System.setProperty("DB_NAME",DB_NAME)
        System.setProperty("DB_URL",DB_URL)
        System.setProperty("DB_PORT",DB_PORT)
        System.setProperty("DB_USERNAME",DB_USERNAME)
        System.setProperty("DB_PASSWORD",DB_PASSWORD)
        System.setProperty("BOT_TOKEN",BOT_TOKEN)
    }
}